name: Release
on:
  release:
    types: [published]

jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 🏗 Set up Python 3.9.21
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: 🏗 Set up Node 14
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: 🏗 Install build dependencies
        run: |
          python -m pip install wheel octoprint --user
          npm install -g npm@7
          npm install
      - name: 🔨 Build frontend code in release mode
        run: |
          npm run release
      - name: 🔨 Commit changes to make versioneer happy
        uses: EndBug/add-and-commit@v7
        with:
          push: false
          branch: main
      - name: 🔨 Build a source zip
        run: |
          python setup.py sdist --formats=zip
      - name: 🚚 Rename to sdist.zip
        run: |
          mv dist/OctoPrint-WLED-*.zip dist/sdist.zip
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  upload-asset:
    name: 📦 Upload asset to release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure the full history is fetched
      - name: ⬇ Download build result
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: 🚚 Rename to release.zip
        run: |
          cp dist/sdist.zip release.zip
      - name: 🥅 Upload asset with GitHub CLI
        run: |
          gh release upload "${{ github.event.release.tag_name }}" release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}